package view.Invoices;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.*;
import javax.swing.table.*;
import javax.swing.*;
import java.io.*;
import view.MainFrame;
/**
 * Selectionscreen to exclude invoices in invoicing batch
 * @author Thom
 */
public class SelectInvoice extends javax.swing.JFrame {
    private Object[] iExcluded;
    public boolean selectionComplete = false;

    /** Creates new form SelectInvoice */
    public SelectInvoice() {
        initComponents();
        this.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        this.getInvoices();
    }
    
    private void getInvoices(){
        DefaultTableModel model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return (column==4);
            }
            
            @Override
            public Class getColumnClass(int column) {
                return (getValueAt(0, column).getClass());
            }
        };
        this.jTable1.setModel(model);
        model.addColumn("Factuurnummer");
        model.addColumn("Vervaldatum");
        model.addColumn("Lidnummer");
        model.addColumn("Totaalbedrag");
        model.addColumn("Uitsluiten");
        List<Invoice> inv = main.PASApplication.getQueryManager().selectInvoices();
        for(int i = 0; i<inv.size();i++){
            Invoice fact = inv.get(i);
            model.addRow(new Object[]{fact.getInvoiceNumber(), fact.getInvoiceExpire().toGMTString(), fact.getLidNr(), fact.getInvoiceTotal(), Boolean.FALSE});
        }
    }
    
    private void getSelectedValues(){
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) this.jTable1.getModel();
        int nRow = dtm.getRowCount();
        List<Object> stringList = new ArrayList<Object>();
        iExcluded = new Object[dtm.getRowCount()];
        for (int i = 0 ; i < nRow ; i++){
            if(dtm.getValueAt(i, 4) == Boolean.TRUE)
                stringList.add(dtm.getValueAt(i, 0));
        }
        iExcluded = stringList.toArray(new Object[stringList.size()]);
    }
    
    public Object[] getExcluded(){
        return this.iExcluded;
    }
    
    private void runBatch(){
        if(main.PASApplication.getQueryManager().setFacturen(this.iExcluded) && main.PASApplication.getQueryManager().setFactuurregels(this.iExcluded)){
            JOptionPane.showMessageDialog(null, "Facturen zijn aangemaakt.");
            this.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(null, "Er is iets misgegaan bij het aanmaken van de facturen.\nDe factuurrun wordt afgebroken.");
            return;
        }

        String[][] invoices = main.PASApplication.getQueryManager().getAllInvoice();

        JFileChooser fc = new JFileChooser();
        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            FileWriter writer = null;
            try {
                writer = new FileWriter(fc.getSelectedFile().getAbsolutePath());
                writer.append("Factuurnummer,");
                writer.append("Factuurdatum,");
                writer.append("Vervaldatum,");
                writer.append("Lidnummer,");
                writer.append("Totaalbedrag,");
                writer.append("Lidnaam,");
                writer.append('\n');
                for (int i = 0; i < invoices.length; i++) {
                    writer.append(invoices[i][0] + ",");
                    writer.append(invoices[i][1] + ",");
                    writer.append(invoices[i][2] + ",");
                    writer.append(invoices[i][3] + ",");
                    writer.append(invoices[i][4] + ",");
                    writer.append(invoices[i][5] + ",");
                    writer.append('\n');
                }
                writer.flush();
                writer.close();
            } catch (IOException ex) {
                System.out.println("Tijdens het wegschrijven van de facturen is er iets misgegaan: \n"+ex.getMessage());
            } finally {
                try {
                    writer.close();
                } catch (IOException ex) {
                    System.out.println("Tijdens het wegschrijven van de facturen is er iets misgegaan: \n"+ex.getMessage());
                }
            }
        }
        MainFrame.addPanel(new InvoiceSearch(), MainFrame.INVOICES);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Verder >");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Annuleren");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(145, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.getSelectedValues();
        this.runBatch();
        this.selectionComplete = true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.selectionComplete = true;
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SelectInvoice().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
